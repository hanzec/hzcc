stages:
  - build
  - test

.install_vcpkg_dep: &install_vcpkg_dep
  before_script:
    - apt update
    - apt install -y curl zip unzip tar pkg-config cmake # install vcpkg dependencies

.install_latex_dep: &install_latex_dep
  before_script:
    - apt update
    - apt-get install -y texlive-base texlive-latex-recommended texlive-latex-extra

.install_cmake_3_16_0: &install_cmake_3_16_0
  before_script:
    - apt update
    - apt install -y git
    - mkdir -p /tmp && cd /tmp
    - git clone --depth 1 --branch "v3.16.0" https://github.com/Kitware/CMake.git
    - cd ./CMake && ./bootstrap --parallel=$(nproc) > /dev/null 2>&1
    - make -j$(nproc) > /dev/null 2>&1 && make install > /dev/null 2>&1

.compile_default: &compile_default
  before_script:
    - !reference [.install_vcpkg_dep, before_script]
    - !reference [.install_cmake_3_16_0, before_script]

.documentation_default: &documentation_default
  before_script:
    - !reference [.compile_default, before_script]
    - !reference [.install_latex_dep, before_script]

build_gcc_10_3_make_release:
  <<: *compile_default
  stage: build
  image: gcc:10.3
  tags:
    - docker
  script:
    - cd $CI_PROJECT_DIR
    - cmake . -B./build/ -DCMAKE_BUILD_TYPE=Release -G 'Unix Makefiles' && cd ./build && make mycc -j$(nproc)
  artifacts:
    name: "build_gcc_10_3_make_release($CI_JOB_NAME-$CI_COMMIT_REF_NAME)"
    paths:
      - ./build/Source/mycc
    expire_in: 20 days

build_gcc_10_3_ninja_release:
  <<: *compile_default
  stage: build
  image: gcc:10.3
  tags:
    - docker
  script:
    - apt update
    - cd ${CI_PROJECT_DIR}
    - apt-get install -y ninja-build # install ninja
    - cmake . -B./build/ -DCMAKE_BUILD_TYPE=Release -G Ninja && cd ./build && make mycc -j$(nproc)
  artifacts:
    name: "build_gcc_10_3_ninja_release($CI_JOB_NAME-$CI_COMMIT_REF_NAME)"
    paths:
      - ./build/Source/mycc
    expire_in: 20 days
