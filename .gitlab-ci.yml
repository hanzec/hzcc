stages:
  - build
  - test

.install_vcpkg_dep: &install_vcpkg_dep
  before_script:
    - apt update
    - apt-get install -y curl zip unzip tar pkg-config cmake # install vcpkg dependencies

.install_cmake_3_16_0: &install_cmake_3_16_0
  before_script:
    - apt update
    - apt install -y git
    - git clone --depth 1 --branch "v3.16.0" https://github.com/Kitware/CMake.git
    - cd ./CMake && ./bootstrap && make -j$(nproc) && make install

.compile_default: &compile_default
  <<:
    - *install_vcpkg_dep
    - *install_cmake_3_16_0

build_gcc_10_3_make_release:
  <<: *compile_default
  stage: build
  image: gcc:10.3
  tags:
    - docker
  script:
    - cmake . -B./build/ -DCMAKE_BUILD_TYPE=Release -G 'Unix Makefiles' && cd ./build && make mycc -j$(nproc)
  artifacts:
    paths:
      - ./build/Source/mycc
    expire_in: 5 days

build_gcc_10_3_ninja_release:
  <<: *compile_default
  stage: build
  image: gcc:10.3
  tags:
    - docker
  script:
    - apt update
    - apt-get install -y ninja-build # install ninja
    - cmake . -B./build/ -DCMAKE_BUILD_TYPE=Release -G Ninja && cd ./build && make mycc -j$(nproc)
  artifacts:
    paths:
      - ./build/Source/mycc
    expire_in: 5 days
